import os
import re
import sys
import shutil
import pandas as pd
from time import (localtime, strftime)
import touchscreen_toolbox.config as cfg


# IO related
# ------------------------

def is_generated(folder_path):
    """Check if folder is generated by toolbox"""
    return os.path.basename(folder_path) in [cfg.DLC_FOLDER, cfg.RST_FOLDER]


def is_valid_folder(folder_path):
    """Check if folder initialized by toolbox"""
    ls = os.listdir(folder_path)
    return (cfg.DLC_FOLDER in ls) and (cfg.RST_FOLDER in ls)


def mk_dir(path: str, force: bool=True):
    """(re)Make directory, deletes existing directory"""
    if os.path.exists(path):
        if force:
            print(f"Removing existing {os.path.basename(path)} folder")
            shutil.rmtree(path)
        
        else:
            print(f"Folder already exists, failed to make directory")
            return 1

    os.mkdir(path)


def move_files(files: list, curr_folder: str, targ_folder: str):
    """Move <files> from <curr_folder> to <targ_folder>"""
    for f in files:
        file_path = os.path.join(curr_folder, f)
        new_path = os.path.join(targ_folder, f)
        os.rename(file_path, new_path)

        
def find_files(folder_path: str, prefix: str=False, suffix: str=False):
    """
    Find all file names inside <folder_path> 
    with the given <prefix> and/or <suffix>
    """

    ls = os.listdir(folder_path)
    
    if prefix:
        ls = list(filter(lambda x: x.startswith(prefix), ls))
    if suffix:
        ls = list(filter(lambda x: x.endswith(suffix), ls))
        
    return ls


def move_dlc_files(video_path, direction=0):
    """
    Move dlc output files,
    0: DLC folder -> video folder,
    1: video folder -> DLC folder
    """
    video_name = os.path.basename(video_path)
    video_folder = os.path.dirname(video_path)
    assert is_valid_folder(video_folder), "Invalid folder"
    dlc_folder = os.path.join(video_folder, cfg.DLC_FOLDER)
    
    if direction == 0:
        dlc_files = find_files(dlc_folder, prefix=video_name)
        move_files(dlc_files, dlc_folder, video_folder)
    else:
        dlc_files = find_files(video_folder, prefix=video_name)
        move_files(dlc_files, video_folder, dlc_folder)


# logger
# ------------------------
# modified from
# https://stackoverflow.com/questions/616645/how-to-duplicate-sys-stdout-to-a-log-file
class Tee(object):
    def __init__(self, file):
        self.file = open(file, 'w')
        self.stdout = sys.stdout
        sys.stdout = self
        
    def __del__(self):
        try:
            self.close()
        except: pass
        
    def write(self, data):
        if data != '\n':
            data = strftime("%H:%M:%S    ", localtime()) + data
        self.file.write(data)
        self.stdout.write(data)
        
    def flush(self): self.file.flush()
        
    def close(self):
        sys.stdout = self.stdout
        self.file.close()